{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emre-\\\\MyNewDocker\\\\MyDocker\\\\frontend\\\\src\\\\RestaurantDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RestaurantDetails() {\n  _s();\n  const {\n    restaurantId\n  } = useParams();\n  const [restaurant, setRestaurant] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(`http://localhost:5000/api/v1/restaurants/${restaurantId}`).then(response => response.json()).then(data => {\n      setRestaurant(data);\n      setLoading(false);\n    }).catch(err => {\n      setError('Failed to fetch restaurant details');\n      setLoading(false);\n    });\n  }, [restaurantId]); // Dependency on restaurantId ensures fetch is rerun if the ID changes\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: restaurant === null || restaurant === void 0 ? void 0 : restaurant.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"City ID: \", restaurant === null || restaurant === void 0 ? void 0 : restaurant.city_id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User Rating: \", (restaurant === null || restaurant === void 0 ? void 0 : restaurant.userrating) || 'Not Rated']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(RestaurantDetails, \"6KWLzr3sJrL6vjPldR+l5LsuKbc=\", false, function () {\n  return [useParams];\n});\n_c = RestaurantDetails;\nexport default RestaurantDetails;\nvar _c;\n$RefreshReg$(_c, \"RestaurantDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","RestaurantDetails","_s","restaurantId","restaurant","setRestaurant","loading","setLoading","error","setError","fetch","then","response","json","data","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","name","city_id","userrating","_c","$RefreshReg$"],"sources":["C:/Users/emre-/MyNewDocker/MyDocker/frontend/src/RestaurantDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction RestaurantDetails() {\r\n  const { restaurantId } = useParams();\r\n  const [restaurant, setRestaurant] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:5000/api/v1/restaurants/${restaurantId}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setRestaurant(data);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        setError('Failed to fetch restaurant details');\r\n        setLoading(false);\r\n      });\r\n  }, [restaurantId]);  // Dependency on restaurantId ensures fetch is rerun if the ID changes\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>{restaurant?.name}</h1>\r\n      <p>City ID: {restaurant?.city_id}</p>\r\n      <p>User Rating: {restaurant?.userrating || 'Not Rated'}</p>\r\n      {/* Add more restaurant details here */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RestaurantDetails;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAa,CAAC,GAAGL,SAAS,CAAC,CAAC;EACpC,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACda,KAAK,CAAC,4CAA4CP,YAAY,EAAE,CAAC,CAC9DQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZT,aAAa,CAACS,IAAI,CAAC;MACnBP,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDQ,KAAK,CAACC,GAAG,IAAI;MACZP,QAAQ,CAAC,oCAAoC,CAAC;MAC9CF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,CAACJ,YAAY,CAAC,CAAC,CAAC,CAAE;;EAErB,IAAIG,OAAO,EAAE,oBAAON,OAAA;IAAAiB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAIb,KAAK,EAAE,oBAAOR,OAAA;IAAAiB,QAAA,GAAK,SAAO,EAACT,KAAK;EAAA;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE3C,oBACErB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAKb,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEkB;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC3BrB,OAAA;MAAAiB,QAAA,GAAG,WAAS,EAACb,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEmB,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCrB,OAAA;MAAAiB,QAAA,GAAG,eAAa,EAAC,CAAAb,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEoB,UAAU,KAAI,WAAW;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAExD,CAAC;AAEV;AAACnB,EAAA,CA9BQD,iBAAiB;EAAA,QACCH,SAAS;AAAA;AAAA2B,EAAA,GAD3BxB,iBAAiB;AAgC1B,eAAeA,iBAAiB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}